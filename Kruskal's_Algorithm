#include<bits/stdc++.h>
using namespace std;
const int MAX = 1e4 + 5;
int nodes,edges;
pair <long long, pair<int, int> > p[MAX];


long long kruskal(pair<long long, pair<int, int> > p[])
{
    int x,y;
    long long cost, minimumCost = 0;
    set<int> s;
    for(int i = 0;i < edges;++i)
    {

    x=p[i].second.first;
    y=p[i].second.second;
    if(s.count(x)==0 || s.count(y)==0)
    {
     minimumCost+=p[i].first;
     s.insert(x);
     s.insert(y);
    }
    }
    for(int i = 0;i < edges;++i)
    {
     cout<<p[i].first<<" "<<p[i].second.first<<" "<<p[i].second.second<<endl;

    }
    return minimumCost;
}

int main()
{
    int x,y;
    long long weight,cost,minimumcost=0;
    cin>>nodes>>edges;
  for(int i=0;i<edges;i++)
  {
      cin>>x>>y>>weight;
      p[i]=make_pair(weight,make_pair(x, y));
  }
  sort(p,p+edges);
  minimumcost=kruskal(p);
  cout<<minimumcost<<endl;
}
